{
  "address": "0x99578f8F51F8EF60232C93950716ae08960479bE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbb9eb0273828a1f3762a67ba882c2b842f09f0d197fc34623341ed97bb553b5a",
  "receipt": {
    "to": null,
    "from": "0x610C58FE6B4B65297da87F2F7C25532BacF3EBd9",
    "contractAddress": "0x99578f8F51F8EF60232C93950716ae08960479bE",
    "transactionIndex": 52,
    "gasUsed": "1034314",
    "logsBloom": "0x
    "blockHash": "0x34f544cf2718b4f1d3c23fc64b96a57aecd62ea5acd07f989e3902cae07d5f25",
    "transactionHash": "0xbb9eb0273828a1f3762a67ba882c2b842f09f0d197fc34623341ed97bb553b5a",
    "logs": [],
    "blockNumber": 8427898,
    "cumulativeGasUsed": "17581942",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "a9bfc0c26d25ac20771020d58a8f1520",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Rony\",\"details\":\"This implement priceFeed as a library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A simple contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is demo of simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n/**\\n * @title A simple contract for crowd funding\\n * @author Rony\\n * @notice This contract is demo of simple funding contract\\n * @dev This implement priceFeed as a library\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private   immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed=AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n       \\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n      \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    function cheaperWithdraw() public onlyOwner{\\n        address [] memory funders=s_funders;\\n        for(uint256 funderIndex=0;funderIndex<funders.length;funderIndex++){\\n            address funder=funders[funderIndex];\\n            s_addressToAmountFunded[funder]=0;\\n\\n        }\\n        s_funders= new address[](0);\\n        (bool callSuccess, )=i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess);\\n        \\n    }\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n        \\n    }\\n    function getFunders(uint256 index) public view returns(address){\\n        return s_funders[index];\\n\\n    }\\n     function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n\\n\\n  \\n\\n}\\n\",\"keccak256\":\"0xdf96a63be8943e33be92ef12609c215623e1684d7fa4f631f597eda6fe1d1bd4\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n      \\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n       \\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xa8b1662a89ece65bb2f4563fd371ad1f6c5b6a414b674275ccd76b114cc6eeb4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d8380380620012d883398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516111586200018060003960008181610245015281816104940152818161061e015261081401526111586000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a90565b6101b3565b6040516100b49190610ad6565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b1d565b6101fb565b6040516100f19190610b59565b60405180910390f35b34801561010657600080fd5b5061010f610243565b005b34801561011d57600080fd5b50610126610483565b6040516101339190610ad6565b60405180910390f35b34801561014857600080fd5b50610151610490565b60405161015e9190610b59565b60405180910390f35b34801561017357600080fd5b5061017c6104b8565b6040516101899190610bd3565b60405180910390f35b61019a6104e2565b005b3480156101a857600080fd5b506101b161061c565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061021157610210610bee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610373576000600182815481106102ee576102ed610bee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036b90610c4c565b9150506102cb565b50600067ffffffffffffffff81111561038f5761038e610c95565b5b6040519080825280602002602001820160405280156103bd5781602001602082028036833780820191505090505b50600190805190602001906103d3929190610986565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103fa90610cf5565b60006040518083038185875af1925050503d8060008114610437576040519150601f19603f3d011682016040523d82523d6000602084013e61043c565b606091505b5050905080610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790610d67565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610521600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108aa90919063ffffffff16565b1015610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990610dd3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b09190610df3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106db575b5050505050905060005b81518110156107af57600082828151811061074d5761074c610bee565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a790610c4c565b91505061072f565b50600067ffffffffffffffff8111156107cb576107ca610c95565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b506001908051906020019061080f929190610986565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085690610cf5565b60006040518083038185875af1925050503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50509050806108a657600080fd5b5050565b6000806108b6836108e6565b90506000670de0b6b3a764000085836108cf9190610e49565b6108d99190610ed2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092f57600080fd5b505afa158015610943573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109679190610f90565b5050509150506402540be4008161097e919061100b565b915050919050565b8280548282559060005260206000209081019282156109ff579160200282015b828111156109fe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a6565b5b509050610a0c9190610a10565b5090565b5b80821115610a29576000816000905550600101610a11565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5d82610a32565b9050919050565b610a6d81610a52565b8114610a7857600080fd5b50565b600081359050610a8a81610a64565b92915050565b600060208284031215610aa657610aa5610a2d565b5b6000610ab484828501610a7b565b91505092915050565b6000819050919050565b610ad081610abd565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b610afa81610abd565b8114610b0557600080fd5b50565b600081359050610b1781610af1565b92915050565b600060208284031215610b3357610b32610a2d565b5b6000610b4184828501610b08565b91505092915050565b610b5381610a52565b82525050565b6000602082019050610b6e6000830184610b4a565b92915050565b6000819050919050565b6000610b99610b94610b8f84610a32565b610b74565b610a32565b9050919050565b6000610bab82610b7e565b9050919050565b6000610bbd82610ba0565b9050919050565b610bcd81610bb2565b82525050565b6000602082019050610be86000830184610bc4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5782610abd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8a57610c89610c1d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdf600083610cc4565b9150610cea82610ccf565b600082019050919050565b6000610d0082610cd2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d51600b83610d0a565b9150610d5c82610d1b565b602082019050919050565b60006020820190508181036000830152610d8081610d44565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dbd601b83610d0a565b9150610dc882610d87565b602082019050919050565b60006020820190508181036000830152610dec81610db0565b9050919050565b6000610dfe82610abd565b9150610e0983610abd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3e57610e3d610c1d565b5b828201905092915050565b6000610e5482610abd565b9150610e5f83610abd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9857610e97610c1d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610edd82610abd565b9150610ee883610abd565b925082610ef857610ef7610ea3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2281610f03565b8114610f2d57600080fd5b50565b600081519050610f3f81610f19565b92915050565b6000819050919050565b610f5881610f45565b8114610f6357600080fd5b50565b600081519050610f7581610f4f565b92915050565b600081519050610f8a81610af1565b92915050565b600080600080600060a08688031215610fac57610fab610a2d565b5b6000610fba88828901610f30565b9550506020610fcb88828901610f66565b9450506040610fdc88828901610f7b565b9350506060610fed88828901610f7b565b9250506080610ffe88828901610f30565b9150509295509295909350565b600061101682610f45565b915061102183610f45565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110605761105f610c1d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109d5761109c610c1d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110da576110d9610c1d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111757611116610c1d565b5b82820290509291505056fea26469706673582212209a2a1e5216c1a153d9f555158e00f88b7f492673c7ee519208870515351742aa64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461013c5780639e87a5cd14610167578063b60d428814610192578063be2693f01461019c5761007b565b80630343fb25146100805780633a7b6c74146100bd5780633ccfd60b146100fa5780636b69a59214610111575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a90565b6101b3565b6040516100b49190610ad6565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df9190610b1d565b6101fb565b6040516100f19190610b59565b60405180910390f35b34801561010657600080fd5b5061010f610243565b005b34801561011d57600080fd5b50610126610483565b6040516101339190610ad6565b60405180910390f35b34801561014857600080fd5b50610151610490565b60405161015e9190610b59565b60405180910390f35b34801561017357600080fd5b5061017c6104b8565b6040516101899190610bd3565b60405180910390f35b61019a6104e2565b005b3480156101a857600080fd5b506101b161061c565b005b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061021157610210610bee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610373576000600182815481106102ee576102ed610bee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061036b90610c4c565b9150506102cb565b50600067ffffffffffffffff81111561038f5761038e610c95565b5b6040519080825280602002602001820160405280156103bd5781602001602082028036833780820191505090505b50600190805190602001906103d3929190610986565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103fa90610cf5565b60006040518083038185875af1925050503d8060008114610437576040519150601f19603f3d011682016040523d82523d6000602084013e61043c565b606091505b5050905080610480576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047790610d67565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610521600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108aa90919063ffffffff16565b1015610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990610dd3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b09190610df3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106db575b5050505050905060005b81518110156107af57600082828151811061074d5761074c610bee565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a790610c4c565b91505061072f565b50600067ffffffffffffffff8111156107cb576107ca610c95565b5b6040519080825280602002602001820160405280156107f95781602001602082028036833780820191505090505b506001908051906020019061080f929190610986565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085690610cf5565b60006040518083038185875af1925050503d8060008114610893576040519150601f19603f3d011682016040523d82523d6000602084013e610898565b606091505b50509050806108a657600080fd5b5050565b6000806108b6836108e6565b90506000670de0b6b3a764000085836108cf9190610e49565b6108d99190610ed2565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092f57600080fd5b505afa158015610943573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109679190610f90565b5050509150506402540be4008161097e919061100b565b915050919050565b8280548282559060005260206000209081019282156109ff579160200282015b828111156109fe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a6565b5b509050610a0c9190610a10565b5090565b5b80821115610a29576000816000905550600101610a11565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5d82610a32565b9050919050565b610a6d81610a52565b8114610a7857600080fd5b50565b600081359050610a8a81610a64565b92915050565b600060208284031215610aa657610aa5610a2d565b5b6000610ab484828501610a7b565b91505092915050565b6000819050919050565b610ad081610abd565b82525050565b6000602082019050610aeb6000830184610ac7565b92915050565b610afa81610abd565b8114610b0557600080fd5b50565b600081359050610b1781610af1565b92915050565b600060208284031215610b3357610b32610a2d565b5b6000610b4184828501610b08565b91505092915050565b610b5381610a52565b82525050565b6000602082019050610b6e6000830184610b4a565b92915050565b6000819050919050565b6000610b99610b94610b8f84610a32565b610b74565b610a32565b9050919050565b6000610bab82610b7e565b9050919050565b6000610bbd82610ba0565b9050919050565b610bcd81610bb2565b82525050565b6000602082019050610be86000830184610bc4565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5782610abd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8a57610c89610c1d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdf600083610cc4565b9150610cea82610ccf565b600082019050919050565b6000610d0082610cd2565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d51600b83610d0a565b9150610d5c82610d1b565b602082019050919050565b60006020820190508181036000830152610d8081610d44565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dbd601b83610d0a565b9150610dc882610d87565b602082019050919050565b60006020820190508181036000830152610dec81610db0565b9050919050565b6000610dfe82610abd565b9150610e0983610abd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3e57610e3d610c1d565b5b828201905092915050565b6000610e5482610abd565b9150610e5f83610abd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9857610e97610c1d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610edd82610abd565b9150610ee883610abd565b925082610ef857610ef7610ea3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2281610f03565b8114610f2d57600080fd5b50565b600081519050610f3f81610f19565b92915050565b6000819050919050565b610f5881610f45565b8114610f6357600080fd5b50565b600081519050610f7581610f4f565b92915050565b600081519050610f8a81610af1565b92915050565b600080600080600060a08688031215610fac57610fab610a2d565b5b6000610fba88828901610f30565b9550506020610fcb88828901610f66565b9450506040610fdc88828901610f7b565b9350506060610fed88828901610f7b565b9250506080610ffe88828901610f30565b9150509295509295909350565b600061101682610f45565b915061102183610f45565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110605761105f610c1d565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109d5761109c610c1d565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110da576110d9610c1d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111757611116610c1d565b5b82820290509291505056fea26469706673582212209a2a1e5216c1a153d9f555158e00f88b7f492673c7ee519208870515351742aa64736f6c63430008090033",
  "devdoc": {
    "author": "Rony",
    "details": "This implement priceFeed as a library",
    "kind": "dev",
    "methods": {},
    "title": "A simple contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is demo of simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}